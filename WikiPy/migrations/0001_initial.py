# Generated by Django 3.2.5 on 2021-09-26 10:50

import WikiPy.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('namespace_id', models.IntegerField(validators=[WikiPy.models.namespace_id_validator])),
                ('title', models.CharField(max_length=100, validators=[WikiPy.models.page_title_validator])),
                ('deleted', models.BooleanField(default=False)),
                ('content_model', models.CharField(default='wiki_page', max_length=20, validators=[WikiPy.models.content_model_validator])),
                ('content_language_code', models.CharField(default='en', max_length=20, validators=[WikiPy.models.language_validator])),
            ],
            options={
                'unique_together': {('namespace_id', 'title')},
            },
        ),
        migrations.CreateModel(
            name='TalkTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_namespace_id', models.IntegerField(validators=[WikiPy.models.namespace_id_validator])),
                ('page_title', models.CharField(max_length=100, validators=[WikiPy.models.page_title_validator])),
                ('pinned', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserRenamingLogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('target_user', models.CharField(max_length=150, validators=[WikiPy.models._username_validator2])),
                ('reason', models.CharField(blank=True, max_length=200, null=True)),
                ('subject_new_username', models.CharField(max_length=150)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroupChangeLogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('target_user', models.CharField(max_length=150, validators=[WikiPy.models._username_validator2])),
                ('reason', models.CharField(blank=True, max_length=200, null=True)),
                ('group', models.CharField(max_length=20, validators=[WikiPy.models.group_id_validator])),
                ('joined', models.BooleanField()),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('_gender', models.BooleanField(blank=True, default=None, null=True)),
                ('lang_code', models.CharField(default='en', max_length=10)),
                ('signature', models.CharField(max_length=100)),
                ('email_confirmation_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('email_confirmation_code', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('email_pending_confirmation', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('users_can_send_emails', models.BooleanField(default=True)),
                ('send_copy_of_sent_emails', models.BooleanField(default=False)),
                ('send_watchlist_emails', models.BooleanField(default=False)),
                ('send_minor_watchlist_emails', models.BooleanField(default=False)),
                ('skin', models.CharField(default='default', max_length=50)),
                ('timezone', models.CharField(max_length=50)),
                ('datetime_format_id', models.IntegerField(blank=True, default=None, null=True)),
                ('max_image_file_preview_size', models.IntegerField()),
                ('max_image_thumbnail_size', models.IntegerField()),
                ('enable_media_viewer', models.BooleanField(default=True)),
                ('display_maintenance_categories', models.BooleanField(default=False)),
                ('numbered_section_titles', models.BooleanField(default=False)),
                ('default_revisions_list_size', models.IntegerField(default=50, validators=[WikiPy.models._default_revisions_list_size_validator])),
                ('confirm_rollback', models.BooleanField(default=False)),
                ('all_edits_minor', models.BooleanField(default=False)),
                ('blank_comment_prompt', models.BooleanField(default=False)),
                ('unsaved_changes_warning', models.BooleanField(default=True)),
                ('show_preview_first_edit', models.BooleanField(default=False)),
                ('preview_above_edit_box', models.BooleanField(default=True)),
                ('rc_max_days', models.IntegerField(default=2, validators=[WikiPy.models._rc_max_days_validator])),
                ('rc_max_revisions', models.IntegerField(default=50, validators=[WikiPy.models._rc_max_revisions_validator])),
                ('rc_group_by_page', models.BooleanField(default=False)),
                ('rc_hide_minor', models.BooleanField(default=False)),
                ('rc_hide_categories', models.BooleanField(default=False)),
                ('rc_hide_patrolled', models.BooleanField(default=False)),
                ('rc_hide_patrolled_new_pages', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserCreationLogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('automatic', models.BooleanField()),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserBlockLogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('target_user', models.CharField(max_length=150, validators=[WikiPy.models._username_validator2])),
                ('reason', models.CharField(blank=True, max_length=200, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('on_whole_site', models.BooleanField(default=False)),
                ('pages', models.TextField()),
                ('namespaces', models.TextField()),
                ('on_own_talk_page', models.BooleanField(default=False)),
                ('duration', models.IntegerField()),
                ('reason', models.TextField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TalkTopicRevision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('hidden', models.BooleanField(default=False)),
                ('author_hidden', models.BooleanField(default=False)),
                ('comment_hidden', models.BooleanField(default=False)),
                ('content', models.TextField(blank=True)),
                ('comment', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('minor', models.BooleanField(default=False)),
                ('diff_size', models.IntegerField()),
                ('reverted_to', models.IntegerField(blank=True, default=None, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WikiPy.talktopic')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='talktopic',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='talktopic',
            name='parent_topic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='WikiPy.talktopic'),
        ),
        migrations.CreateModel(
            name='PageRevision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('hidden', models.BooleanField(default=False)),
                ('author_hidden', models.BooleanField(default=False)),
                ('comment_hidden', models.BooleanField(default=False)),
                ('content', models.TextField(blank=True)),
                ('comment', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('minor', models.BooleanField(default=False)),
                ('diff_size', models.IntegerField()),
                ('reverted_to', models.IntegerField(blank=True, default=None, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WikiPy.page')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PageRenamingLogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('page_namespace_id', models.IntegerField(validators=[WikiPy.models.namespace_id_validator])),
                ('page_title', models.CharField(max_length=100, validators=[WikiPy.models.page_title_validator])),
                ('reason', models.CharField(blank=True, max_length=200, null=True)),
                ('new_page_namespace_id', models.IntegerField(validators=[WikiPy.models.namespace_id_validator])),
                ('new_page_title', models.CharField(max_length=100, validators=[WikiPy.models.page_title_validator])),
                ('created_redirection', models.BooleanField()),
                ('moved_talks', models.BooleanField()),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PageProtectionStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_namespace_id', models.IntegerField(validators=[WikiPy.models.namespace_id_validator])),
                ('page_title', models.CharField(max_length=100, validators=[WikiPy.models.page_title_validator])),
                ('protection_level', models.CharField(max_length=100, validators=[WikiPy.models.group_id_validator])),
                ('applies_to_talk_page', models.BooleanField()),
                ('reason', models.CharField(max_length=200)),
                ('expiration_date', models.DateField(blank=True, null=True, validators=[WikiPy.models.expiration_date_validator])),
            ],
            options={
                'unique_together': {('page_namespace_id', 'page_title')},
            },
        ),
        migrations.CreateModel(
            name='PageProtectionLogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('page_namespace_id', models.IntegerField(validators=[WikiPy.models.namespace_id_validator])),
                ('page_title', models.CharField(max_length=100, validators=[WikiPy.models.page_title_validator])),
                ('reason', models.CharField(blank=True, max_length=200, null=True)),
                ('protection_level', models.CharField(max_length=100, validators=[WikiPy.models.group_id_validator])),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('applies_to_talk_page', models.BooleanField()),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PageDeletionLogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('page_namespace_id', models.IntegerField(validators=[WikiPy.models.namespace_id_validator])),
                ('page_title', models.CharField(max_length=100, validators=[WikiPy.models.page_title_validator])),
                ('reason', models.CharField(blank=True, max_length=200, null=True)),
                ('deleted', models.BooleanField()),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PageCreationLogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('page_namespace_id', models.IntegerField(validators=[WikiPy.models.namespace_id_validator])),
                ('page_title', models.CharField(max_length=100, validators=[WikiPy.models.page_title_validator])),
                ('reason', models.CharField(blank=True, max_length=200, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MessageRevision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('hidden', models.BooleanField(default=False)),
                ('author_hidden', models.BooleanField(default=False)),
                ('comment_hidden', models.BooleanField(default=False)),
                ('content', models.TextField(blank=True)),
                ('comment', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('minor', models.BooleanField(default=False)),
                ('diff_size', models.IntegerField()),
                ('reverted_to', models.IntegerField(blank=True, default=None, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WikiPy.message')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='message',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='replied_to',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='WikiPy.message'),
        ),
        migrations.AddField(
            model_name='message',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WikiPy.talktopic'),
        ),
        migrations.CreateModel(
            name='CategoryData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance', models.BooleanField(default=False)),
                ('page', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='WikiPy.page')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroupRel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(max_length=20, validators=[WikiPy.models.group_id_validator])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'group_id')},
            },
        ),
        migrations.CreateModel(
            name='PageCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100, validators=[WikiPy.models.page_title_validator])),
                ('sort_key', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WikiPy.page')),
            ],
            options={
                'unique_together': {('page', 'category_name')},
            },
        ),
    ]
