var v=Object.defineProperty;var W=t=>{throw TypeError(t)};var N=(t,e,i)=>e in t?v(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i;var u=(t,e,i)=>N(t,typeof e!="symbol"?e+"":e,i),f=(t,e,i)=>e.has(t)||W("Cannot "+i);var n=(t,e,i)=>(f(t,e,"read from private field"),i?i.call(t):e.get(t)),o=(t,e,i)=>e.has(t)?W("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,i),m=(t,e,i,d)=>(f(t,e,"write to private field"),d?d.call(t,i):e.set(t,i),i),p=(t,e,i)=>(f(t,e,"access private method"),i);var k=(t,e,i,d)=>({set _(h){m(t,e,h,i)},get _(){return n(t,e,d)}});function initEditor(){if(!window.ottm.user.get("useEditorSyntaxHighlighting"))return;const t=window.ottm.page.get("wContentType");if(typeof t!="string")throw new Error("Missing page content type");const e={js:"javascript",css:"css",json:"json",module:"python",wikipage:"text"}[t],i="wiki-ace-editor",h=$(`#${i}`).show().data("ace-target"),E=$(`#${h}`).hide(),r=window.ace.edit(i);r.setOptions({mode:`ace/mode/${e}`,useSoftTabs:!0,fontSize:16,minLines:20,maxLines:20}),r.setTheme(window.ottm.page.get("darkMode")?"ace/theme/monokai":"ace/theme/chrome"),r.getSession().setValue(E.val()),r.getSession().on("change",()=>{E.val(r.getSession().getValue()).trigger("change")}),$("#wiki-edit-form").on("submit",j=>{if(!$("#wiki-edit-form-comment").val().trim()&&window.ottm.user.get("warnWhenNoWikiEditComment")){const y=window.ottm.translate("wiki.edit.no_summary_warning");confirm(y)||j.preventDefault()}}),window.ottm.user.get("wCanEditPage")||r.setReadOnly(!0),window.wiki.editor=r}var s;class WikiGadget{constructor(e){u(this,"name");u(this,"version");o(this,s);if(!("name"in e))throw new Error('Missing "name" property in gadget');this.name=e.name,this.version=e.version,m(this,s,e),n(this,s).init()}run(){try{n(this,s).run()}catch(e){return console.error(e),!1}return!0}}s=new WeakMap;var g,a,c,w,l,P;class WikiGadgetManager{constructor(){o(this,l);o(this,g,new Map);o(this,a,0);o(this,c,!1);o(this,w,!1)}registerGadget(gadgetName){if(n(this,w))throw new Error("Cannot register gadgets when manager is locked");console.log(`Registering gadget "${gadgetName}â€¦"`),k(this,a)._++;const apiPath=window.ottm.config.get("wApiPath");$.get(apiPath,{action:"query",query:"gadget",title:gadgetName},data=>{try{const gadget=new WikiGadget(eval(data));n(this,g).set(gadget.name,gadget)}catch(t){console.error(`Error while loading gadget "${gadgetName}":
${t}`)}k(this,a)._--,n(this,a)===0&&n(this,c)&&p(this,l,P).call(this)})}finishRegistration(){m(this,c,!0),n(this,a)===0&&p(this,l,P).call(this)}getGadget(t){return n(this,g).get(t)}isGadgetRegistered(t){return n(this,g).get(t)!==void 0}}g=new WeakMap,a=new WeakMap,c=new WeakMap,w=new WeakMap,l=new WeakSet,P=function(){m(this,w,!0)};class WikiAPI{editPage(e,i){return Promise.reject(new Error("Not implemented"))}getPage(e){return Promise.reject(new Error("Not implemented"))}getPageCategories(e,i=!1){return Promise.reject(new Error("Not implemented"))}getCategories(e){return Promise.reject(new Error("Not implemented"))}parseWikicode(e){return Promise.reject(new Error("Not implemented"))}followPage(e){return Promise.reject(new Error("Not implemented"))}unfollowPage(e){return Promise.reject(new Error("Not implemented"))}}function initWiki(){window.wiki={gadgetsManager:new WikiGadgetManager,api:new WikiAPI,editor:null},$(".hljs").each((e,i)=>{window.hljs.highlightElement(i)});const t=window.ottm.page.get("wAction");(t==="edit"||t==="submit")&&initEditor()}export{WikiAPI,WikiGadget,WikiGadgetManager,initWiki as default};
