const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["css/monokai.css","css/vs.css"])))=>i.map(i=>d[i]);
var N=Object.defineProperty;var v=t=>{throw TypeError(t)};var S=(t,e,i)=>e in t?N(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i;var h=(t,e,i)=>S(t,typeof e!="symbol"?e+"":e,i),p=(t,e,i)=>e.has(t)||v("Cannot "+i);var r=(t,e,i)=>(p(t,e,"read from private field"),i?i.call(t):e.get(t)),n=(t,e,i)=>e.has(t)?v("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,i),m=(t,e,i,o)=>(p(t,e,"write to private field"),o?o.call(t,i):e.set(t,i),i),f=(t,e,i)=>(p(t,e,"access private method"),i);var k=(t,e,i,o)=>({set _(P){m(t,e,P,i)},get _(){return r(t,e,o)}});import{_ as __vitePreload}from"./index.js";import{$}from"./dep-jquery.js";import{H as HighlightJS}from"./dep-hljs.js";import{a as ace}from"./dep-ace.js";import"./dep-maplibre-gl.js";function initEditor(){if(!window.ottm.user.get("useEditorSyntaxHighlighting"))return;const t=window.ottm.page.get("wContentType");if(typeof t!="string")throw new Error("Missing page content type");const e={js:"javascript",css:"css",json:"json",module:"python",wikipage:"text"},i=e[t]??e.wikipage,o="wiki-ace-editor",y=$(`#${o}`).show().data("ace-target"),E=$(`#${y}`).hide(),d=ace.edit(o);d.setOptions({mode:`ace/mode/${i}`,useSoftTabs:!0,fontSize:16,minLines:20,maxLines:20}),d.setTheme(window.ottm.page.get("darkMode")?"ace/theme/monokai":"ace/theme/chrome");const u=d.getSession();u.setValue(E.val()??""),u.on("change",()=>{E.val(u.getValue()).trigger("change")}),$("#wiki-edit-form").on("submit",W=>{if(!($("#wiki-edit-form-comment").val()??"").trim()&&window.ottm.user.get("warnWhenNoWikiEditComment")){const j=window.ottm.translate("wiki.edit.no_summary_warning");confirm(j)||W.preventDefault()}}),window.ottm.user.get("wCanEditPage")||d.setReadOnly(!0),window.wiki.editor=d}var s;class WikiGadget{constructor(e){h(this,"name");h(this,"version");n(this,s);if(!("name"in e))throw new Error('Missing "name" property in gadget');this.name=e.name,this.version=e.version,m(this,s,e),r(this,s).init()}run(){try{r(this,s).run()}catch(e){return console.error(e),!1}return!0}}s=new WeakMap;var g,a,c,l,w,_;class WikiGadgetManager{constructor(){n(this,w);n(this,g,new Map);n(this,a,0);n(this,c,!1);n(this,l,!1)}registerGadget(gadgetName){if(r(this,l))throw new Error("Cannot register gadgets when manager is locked");console.log(`Registering gadget "${gadgetName}â€¦"`),k(this,a)._++;const apiPath=window.ottm.config.get("wApiPath");$.get(apiPath,{action:"query",query:"gadget",title:gadgetName},data=>{try{const gadget=new WikiGadget(eval(data));r(this,g).set(gadget.name,gadget)}catch(t){console.error(`Error while loading gadget "${gadgetName}":
${t}`)}k(this,a)._--,r(this,a)===0&&r(this,c)&&f(this,w,_).call(this)})}finishRegistration(){m(this,c,!0),r(this,a)===0&&f(this,w,_).call(this)}getGadget(t){return r(this,g).get(t)}isGadgetRegistered(t){return r(this,g).get(t)!==void 0}}g=new WeakMap,a=new WeakMap,c=new WeakMap,l=new WeakMap,w=new WeakSet,_=function(){m(this,l,!0)};class WikiAPI{editPage(e,i){return Promise.reject(new Error("Not implemented"))}getPage(e){return Promise.reject(new Error("Not implemented"))}getPageCategories(e,i=!1){return Promise.reject(new Error("Not implemented"))}getCategories(e){return Promise.reject(new Error("Not implemented"))}parseWikicode(e){return Promise.reject(new Error("Not implemented"))}followPage(e){return Promise.reject(new Error("Not implemented"))}unfollowPage(e){return Promise.reject(new Error("Not implemented"))}}async function initWiki(){window.wiki={gadgetsManager:new WikiGadgetManager,api:new WikiAPI,editor:null},window.ottm.page.get("darkMode")?await __vitePreload(()=>Promise.resolve({}),__vite__mapDeps([0])):await __vitePreload(()=>Promise.resolve({}),__vite__mapDeps([1])),$(".hljs").each((e,i)=>{HighlightJS.highlightElement(i)});const t=window.ottm.page.get("wAction");(t==="edit"||t==="submit")&&initEditor()}export{WikiAPI,WikiGadget,WikiGadgetManager,initWiki as default};
