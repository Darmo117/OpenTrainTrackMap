const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["css/monokai.css","css/vs.css"])))=>i.map(i=>d[i]);
var C=Object.defineProperty;var E=t=>{throw TypeError(t)};var N=(t,e,i)=>e in t?C(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i;var k=(t,e,i)=>N(t,typeof e!="symbol"?e+"":e,i),P=(t,e,i)=>e.has(t)||E("Cannot "+i);var a=(t,e,i)=>(P(t,e,"read from private field"),i?i.call(t):e.get(t)),r=(t,e,i)=>e.has(t)?E("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,i),l=(t,e,i,o)=>(P(t,e,"write to private field"),o?o.call(t,i):e.set(t,i),i),y=(t,e,i)=>(P(t,e,"access private method"),i);var _=(t,e,i,o)=>({set _(c){l(t,e,c,i)},get _(){return a(t,e,o)}});import{_ as __vitePreload}from"./index.js";import{$}from"./dep-jquery.js";import{H as HighlightJS}from"./dep-hljs.js";import{a as ace}from"./dep-ace.js";import"./dep-maplibre-gl.js";function initEditor(){if(!window.ottm.user.get("useEditorSyntaxHighlighting"))return;const t=window.ottm.page.get("wContentType");if(typeof t!="string")throw new Error("Missing page content type");const e={js:"javascript",css:"css",json:"json",module:"python",wikipage:"text"},i=e[t]??e.wikipage,o="wiki-ace-editor",m=$(`#${o}`).show().data("ace-target"),p=$(`#${m}`).hide(),n=ace.edit(o);n.setOptions({mode:`ace/mode/${i}`,useSoftTabs:!0,fontSize:16,minLines:20,maxLines:20}),n.setTheme(window.ottm.page.get("darkMode")?"ace/theme/monokai":"ace/theme/chrome");const f=n.getSession();f.setValue(p.val()??""),f.on("change",()=>{p.val(f.getValue()).trigger("change")}),$("#wiki-edit-form").on("submit",v=>{if(!($("#wiki-edit-form-comment").val()??"").trim()&&window.ottm.user.get("warnWhenNoWikiEditComment")){const j=window.ottm.translate("wiki.edit.no_summary_warning");confirm(j)||v.preventDefault()}}),window.ottm.user.get("wCanEditPage")||n.setReadOnly(!0),window.wiki.editor=n}var g;class WikiGadget{constructor(e){k(this,"name");k(this,"version");r(this,g);if(!("name"in e))throw new Error('Missing "name" property in gadget');this.name=e.name,this.version=e.version,l(this,g,e),a(this,g).init()}run(){try{a(this,g).run()}catch(e){return console.error(e),!1}return!0}}g=new WeakMap;var d,s,w,u,h,S;class WikiGadgetManager{constructor(){r(this,h);r(this,d,new Map);r(this,s,0);r(this,w,!1);r(this,u,!1)}async registerGadget(gadgetName){if(a(this,u))throw new Error("Cannot register gadgets when manager is locked");console.log(`Registering gadget "${gadgetName}"â€¦`),_(this,s)._++,await $.get(window.ottm.config.get("wApiPath"),{action:"query",query:"gadget",title:gadgetName}).then(data=>{try{const gadget=new WikiGadget(eval(data));a(this,d).set(gadget.name,gadget)}catch(t){console.error(`Error while loading gadget "${gadgetName}":
${t}`)}_(this,s)._--,a(this,s)===0&&a(this,w)&&y(this,h,S).call(this)}).catch(()=>{console.error(`Could not load gadget "${gadgetName}"`)})}finishRegistration(){l(this,w,!0),a(this,s)===0&&y(this,h,S).call(this)}getGadget(t){return a(this,d).get(t)}isGadgetRegistered(t){return a(this,d).get(t)!==void 0}}d=new WeakMap,s=new WeakMap,w=new WeakMap,u=new WeakMap,h=new WeakSet,S=function(){l(this,u,!0)};class WikiAPI{editPage(e,i){return Promise.reject(new Error("Not implemented"))}getPage(e){return Promise.reject(new Error("Not implemented"))}getPageCategories(e,i=!1){return Promise.reject(new Error("Not implemented"))}getCategories(e){return Promise.reject(new Error("Not implemented"))}parseWikicode(e){return Promise.reject(new Error("Not implemented"))}followPage(e){return Promise.reject(new Error("Not implemented"))}unfollowPage(e){return Promise.reject(new Error("Not implemented"))}}async function initWiki(){window.wiki={gadgetsManager:new WikiGadgetManager,api:new WikiAPI,editor:null};const t=window.ottm.page.get("darkMode");t?await __vitePreload(()=>Promise.resolve({}),__vite__mapDeps([0])):await __vitePreload(()=>Promise.resolve({}),__vite__mapDeps([1])),$(".hljs").each((p,n)=>{HighlightJS.highlightElement(n)});const e=window.ottm.page.get("wAction");(e==="edit"||e==="submit")&&initEditor();const i=window.ottm.config.get("staticPath"),o=encodeURIComponent(window.ottm.page.get("wFullTitleURL")),c=`${i}ottm/wiki/special_pages/${o}/`,m=`User:${window.ottm.user.get("username")}`;$("#special-page-css").length&&await loadStyles(`${c}style.min.css`),$("#special-page-js").length&&await loadScript(`${c}script.min.js`),await loadPageStatics("Interface:Common"),await loadPageStatics(`${m}/Common`),t?await loadPageStatics(`${m}/Common-dark`):await loadPageStatics(`${m}/Common-light`),await loadGadgets()}async function loadPageStatics(t){const e=`${window.ottm.config.get("wApiPath")}?action=query&query=static&title=`,i=encodeURIComponent(t);await loadStyles(`${e}${i}.css`),await loadScript(`${e}${i}.js`)}async function loadStyles(t){await $.get(t).then(e=>{const i=$("<style>");i.text(e),$("head").append(i)}).catch(()=>{})}async function loadScript(t){await $.getScript(t).catch(()=>{})}async function loadGadgets(){await $.get(window.ottm.config.get("wApiPath"),{action:"query",query:"gadgets",username:window.ottm.user.get("username")}).then(async({gadget_names:t})=>{for(const e of t)await window.wiki.gadgetsManager.registerGadget(e);window.wiki.gadgetsManager.finishRegistration()}).catch(()=>{console.error("Could not load gadgets")})}export{WikiAPI,WikiGadget,WikiGadgetManager,initWiki as default};
