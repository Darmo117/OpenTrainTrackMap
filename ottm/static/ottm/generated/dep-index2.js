const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["css/monokai.css","css/vs.css","dep-_editor.js","index.js","dep-jquery.js","dep-maplibre-gl.js","css/index.css","dep-ace.js"])))=>i.map(i=>d[i]);
var E=Object.defineProperty;var k=t=>{throw TypeError(t)};var N=(t,e,i)=>e in t?E(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i;var h=(t,e,i)=>N(t,typeof e!="symbol"?e+"":e,i),p=(t,e,i)=>e.has(t)||k("Cannot "+i);var a=(t,e,i)=>(p(t,e,"read from private field"),i?i.call(t):e.get(t)),o=(t,e,i)=>e.has(t)?k("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,i),d=(t,e,i,n)=>(p(t,e,"write to private field"),n?n.call(t,i):e.set(t,i),i),f=(t,e,i)=>(p(t,e,"access private method"),i);var _=(t,e,i,n)=>({set _(w){d(t,e,w,i)},get _(){return a(t,e,n)}});import{_ as __vitePreload}from"./index.js";import{$}from"./dep-jquery.js";import{H as HighlightJS}from"./dep-hljs.js";import"./dep-maplibre-gl.js";var s;class WikiGadget{constructor(e){h(this,"name");h(this,"version");o(this,s);if(!("name"in e))throw new Error('Missing "name" property in gadget');this.name=e.name,this.version=e.version,d(this,s,e),a(this,s).init()}run(){try{a(this,s).run()}catch(e){return console.error(e),!1}return!0}}s=new WeakMap;var g,r,l,c,m,P;class WikiGadgetManager{constructor(){o(this,m);o(this,g,new Map);o(this,r,0);o(this,l,!1);o(this,c,!1)}async registerGadget(gadgetName){if(a(this,c))throw new Error("Cannot register gadgets when manager is locked");console.log(`Registering gadget "${gadgetName}"â€¦`),_(this,r)._++,await $.get(window.ottm.config.get("wApiPath"),{action:"query",query:"gadget",title:gadgetName}).then(data=>{try{const gadget=new WikiGadget(eval(data));a(this,g).set(gadget.name,gadget)}catch(t){console.error(`Error while loading gadget "${gadgetName}":
${t}`)}_(this,r)._--,a(this,r)===0&&a(this,l)&&f(this,m,P).call(this)}).catch(()=>{console.error(`Could not load gadget "${gadgetName}"`)})}finishRegistration(){d(this,l,!0),a(this,r)===0&&f(this,m,P).call(this)}getGadget(t){return a(this,g).get(t)}isGadgetRegistered(t){return a(this,g).get(t)!==void 0}}g=new WeakMap,r=new WeakMap,l=new WeakMap,c=new WeakMap,m=new WeakSet,P=function(){d(this,c,!0)};class WikiAPI{editPage(e,i){return Promise.reject(new Error("Not implemented"))}getPage(e){return Promise.reject(new Error("Not implemented"))}getPageCategories(e,i=!1){return Promise.reject(new Error("Not implemented"))}getCategories(e){return Promise.reject(new Error("Not implemented"))}parseWikicode(e){return Promise.reject(new Error("Not implemented"))}followPage(e){return Promise.reject(new Error("Not implemented"))}unfollowPage(e){return Promise.reject(new Error("Not implemented"))}}async function initWiki(){window.wiki={gadgetsManager:new WikiGadgetManager,api:new WikiAPI,editor:null};const t=window.ottm.page.get("darkMode");t?await __vitePreload(()=>Promise.resolve({}),__vite__mapDeps([0])):await __vitePreload(()=>Promise.resolve({}),__vite__mapDeps([1])),$(".hljs").each((y,S)=>{HighlightJS.highlightElement(S)});const e=window.ottm.page.get("wAction");(e==="edit"||e==="submit")&&(await __vitePreload(()=>import("./dep-_editor.js"),__vite__mapDeps([2,3,4,5,6,7]))).default();const i=window.ottm.config.get("staticPath"),n=encodeURIComponent(window.ottm.page.get("wFullTitleURL")),w=`${i}ottm/wiki/special_pages/${n}/`,u=`User:${window.ottm.user.get("username")}`;$("#special-page-css").length&&await loadStyles(`${w}style.min.css`),$("#special-page-js").length&&await loadScript(`${w}script.min.js`),await loadPageStatics("Interface:Common"),await loadPageStatics(`${u}/Common`),t?await loadPageStatics(`${u}/Common-dark`):await loadPageStatics(`${u}/Common-light`),await loadGadgets()}async function loadPageStatics(t){const e=`${window.ottm.config.get("wApiPath")}?action=query&query=static&title=`,i=encodeURIComponent(t);await loadStyles(`${e}${i}.css`),await loadScript(`${e}${i}.js`)}async function loadStyles(t){await $.get(t).then(e=>{const i=$("<style>");i.text(e),$("head").append(i)}).catch(()=>{})}async function loadScript(t){await $.getScript(t).catch(()=>{})}async function loadGadgets(){await $.get(window.ottm.config.get("wApiPath"),{action:"query",query:"gadgets",username:window.ottm.user.get("username")}).then(async({gadget_names:t})=>{for(const e of t)await window.wiki.gadgetsManager.registerGadget(e);window.wiki.gadgetsManager.finishRegistration()}).catch(()=>{console.error("Could not load gadgets")})}export{WikiAPI,WikiGadget,WikiGadgetManager,initWiki as default};
//# sourceMappingURL=dep-index2.js.map
