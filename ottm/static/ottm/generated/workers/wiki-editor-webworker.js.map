{"version":3,"file":"wiki-editor-webworker.js","sources":["../node_modules/ace-linters/build/service-manager.js","../src/wiki/wiki-editor-webworker.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 2032:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Go: () => (/* binding */ MessageType)\n/* harmony export */ });\n/* unused harmony exports BaseMessage, InitMessage, FormatMessage, CompleteMessage, ResolveCompletionMessage, HoverMessage, ValidateMessage, ChangeMessage, DeltasMessage, ChangeModeMessage, ChangeOptionsMessage, CloseDocumentMessage, CloseConnectionMessage, GlobalOptionsMessage, ConfigureFeaturesMessage, SignatureHelpMessage, DocumentHighlightMessage, GetSemanticTokensMessage, GetCodeActionsMessage, SetWorkspaceMessage, ExecuteCommandMessage, AppliedEditMessage */\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nclass BaseMessage {\n    constructor(documentIdentifier, callbackId){\n        _define_property(this, \"sessionId\", void 0);\n        _define_property(this, \"documentUri\", void 0);\n        _define_property(this, \"version\", void 0);\n        _define_property(this, \"callbackId\", void 0);\n        this.sessionId = documentIdentifier.sessionId;\n        this.documentUri = documentIdentifier.documentUri;\n        this.callbackId = callbackId;\n    }\n}\nclass InitMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value, version, mode, options){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.init);\n        _define_property(this, \"mode\", void 0);\n        _define_property(this, \"options\", void 0);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"version\", void 0);\n        this.version = version;\n        this.options = options;\n        this.mode = mode;\n        this.value = value;\n    }\n}\nclass FormatMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value, format){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.format);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"format\", void 0);\n        this.value = value;\n        this.format = format;\n    }\n}\nclass CompleteMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.complete);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass ResolveCompletionMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.resolveCompletion);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass HoverMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.hover);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass ValidateMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.validate);\n    }\n}\nclass ChangeMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value, version){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.change);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"version\", void 0);\n        this.value = value;\n        this.version = version;\n    }\n}\nclass DeltasMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value, version){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.applyDelta);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"version\", void 0);\n        this.value = value;\n        this.version = version;\n    }\n}\nclass ChangeModeMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value, version, mode){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.changeMode);\n        _define_property(this, \"mode\", void 0);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"version\", void 0);\n        this.value = value;\n        this.mode = mode;\n        this.version = version;\n    }\n}\nclass ChangeOptionsMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, options, merge = false){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.changeOptions);\n        _define_property(this, \"options\", void 0);\n        _define_property(this, \"merge\", void 0);\n        this.options = options;\n        this.merge = merge;\n    }\n}\nclass CloseDocumentMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.closeDocument);\n    }\n}\nclass CloseConnectionMessage {\n    constructor(callbackId){\n        _define_property(this, \"type\", MessageType.closeConnection);\n        _define_property(this, \"callbackId\", void 0);\n        this.callbackId = callbackId;\n    }\n}\nclass GlobalOptionsMessage {\n    constructor(serviceName, options, merge){\n        _define_property(this, \"type\", MessageType.globalOptions);\n        _define_property(this, \"serviceName\", void 0);\n        _define_property(this, \"options\", void 0);\n        _define_property(this, \"merge\", void 0);\n        this.serviceName = serviceName;\n        this.options = options;\n        this.merge = merge;\n    }\n}\nclass ConfigureFeaturesMessage {\n    constructor(serviceName, options){\n        _define_property(this, \"type\", MessageType.configureFeatures);\n        _define_property(this, \"serviceName\", void 0);\n        _define_property(this, \"options\", void 0);\n        this.serviceName = serviceName;\n        this.options = options;\n    }\n}\nclass SignatureHelpMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.signatureHelp);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass DocumentHighlightMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.documentHighlight);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass GetSemanticTokensMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.getSemanticTokens);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass GetCodeActionsMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value, context){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.getCodeActions);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"context\", void 0);\n        this.value = value;\n        this.context = context;\n    }\n}\nclass SetWorkspaceMessage {\n    constructor(value){\n        _define_property(this, \"type\", MessageType.setWorkspace);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass ExecuteCommandMessage {\n    constructor(serviceName, callbackId, command, args){\n        _define_property(this, \"callbackId\", void 0);\n        _define_property(this, \"serviceName\", void 0);\n        _define_property(this, \"type\", MessageType.executeCommand);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"args\", void 0);\n        this.serviceName = serviceName;\n        this.callbackId = callbackId;\n        this.value = command;\n        this.args = args;\n    }\n}\nclass AppliedEditMessage {\n    constructor(value, serviceName, callbackId){\n        _define_property(this, \"callbackId\", void 0);\n        _define_property(this, \"serviceName\", void 0);\n        _define_property(this, \"type\", MessageType.appliedEdit);\n        _define_property(this, \"value\", void 0);\n        this.serviceName = serviceName;\n        this.callbackId = callbackId;\n        this.value = value;\n    }\n}\nvar MessageType;\n(function(MessageType) {\n    MessageType[MessageType[\"init\"] = 0] = \"init\";\n    MessageType[MessageType[\"format\"] = 1] = \"format\";\n    MessageType[MessageType[\"complete\"] = 2] = \"complete\";\n    MessageType[MessageType[\"resolveCompletion\"] = 3] = \"resolveCompletion\";\n    MessageType[MessageType[\"change\"] = 4] = \"change\";\n    MessageType[MessageType[\"hover\"] = 5] = \"hover\";\n    MessageType[MessageType[\"validate\"] = 6] = \"validate\";\n    MessageType[MessageType[\"applyDelta\"] = 7] = \"applyDelta\";\n    MessageType[MessageType[\"changeMode\"] = 8] = \"changeMode\";\n    MessageType[MessageType[\"changeOptions\"] = 9] = \"changeOptions\";\n    MessageType[MessageType[\"closeDocument\"] = 10] = \"closeDocument\";\n    MessageType[MessageType[\"globalOptions\"] = 11] = \"globalOptions\";\n    MessageType[MessageType[\"configureFeatures\"] = 12] = \"configureFeatures\";\n    MessageType[MessageType[\"signatureHelp\"] = 13] = \"signatureHelp\";\n    MessageType[MessageType[\"documentHighlight\"] = 14] = \"documentHighlight\";\n    MessageType[MessageType[\"closeConnection\"] = 15] = \"closeConnection\";\n    MessageType[MessageType[\"capabilitiesChange\"] = 16] = \"capabilitiesChange\";\n    MessageType[MessageType[\"getSemanticTokens\"] = 17] = \"getSemanticTokens\";\n    MessageType[MessageType[\"getCodeActions\"] = 18] = \"getCodeActions\";\n    MessageType[MessageType[\"executeCommand\"] = 19] = \"executeCommand\";\n    MessageType[MessageType[\"applyEdit\"] = 20] = \"applyEdit\";\n    MessageType[MessageType[\"appliedEdit\"] = 21] = \"appliedEdit\";\n    MessageType[MessageType[\"setWorkspace\"] = 22] = \"setWorkspace\";\n})(MessageType || (MessageType = {}));\n\n\n/***/ }),\n\n/***/ 7770:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rL: () => (/* binding */ mergeObjects),\n/* harmony export */   z2: () => (/* binding */ notEmpty)\n/* harmony export */ });\n/* unused harmony exports mergeRanges, checkValueAgainstRegexpArray, convertToUri */\n\nfunction mergeObjects(obj1, obj2, excludeUndefined = false) {\n    if (!obj1) return obj2;\n    if (!obj2) return obj1;\n    if (excludeUndefined) {\n        obj1 = excludeUndefinedValues(obj1);\n        obj2 = excludeUndefinedValues(obj2);\n    }\n    const mergedObjects = {\n        ...obj2,\n        ...obj1\n    }; // Give priority to obj1 values by spreading obj2 first, then obj1\n    for (const key of Object.keys(mergedObjects)){\n        if (obj1[key] && obj2[key]) {\n            if (Array.isArray(obj1[key])) {\n                mergedObjects[key] = obj1[key].concat(obj2[key]);\n            } else if (Array.isArray(obj2[key])) {\n                mergedObjects[key] = obj2[key].concat(obj1[key]);\n            } else if (typeof obj1[key] === 'object' && typeof obj2[key] === 'object') {\n                mergedObjects[key] = mergeObjects(obj1[key], obj2[key]);\n            }\n        }\n    }\n    return mergedObjects;\n}\nfunction excludeUndefinedValues(obj) {\n    const filteredEntries = Object.entries(obj).filter(([_, value])=>value !== undefined);\n    return Object.fromEntries(filteredEntries);\n}\nfunction notEmpty(value) {\n    return value !== null && value !== undefined;\n}\n//taken with small changes from ace-code\nfunction mergeRanges(ranges) {\n    var list = ranges;\n    list = list.sort(function(a, b) {\n        return comparePoints(a.start, b.start);\n    });\n    var next = list[0], range;\n    for(var i = 1; i < list.length; i++){\n        range = next;\n        next = list[i];\n        var cmp = comparePoints(range.end, next.start);\n        if (cmp < 0) continue;\n        if (cmp == 0 && !range.isEmpty() && !next.isEmpty()) continue;\n        if (comparePoints(range.end, next.end) < 0) {\n            range.end.row = next.end.row;\n            range.end.column = next.end.column;\n        }\n        list.splice(i, 1);\n        next = range;\n        i--;\n    }\n    return list;\n}\nfunction comparePoints(p1, p2) {\n    return p1.row - p2.row || p1.column - p2.column;\n}\nfunction checkValueAgainstRegexpArray(value, regexpArray) {\n    if (!regexpArray) {\n        return false;\n    }\n    for(let i = 0; i < regexpArray.length; i++){\n        if (regexpArray[i].test(value)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction convertToUri(filePath) {\n    //already URI\n    if (filePath.startsWith(\"file:///\")) {\n        return filePath;\n    }\n    return URI.file(filePath).toString();\n}\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServiceManager: () => (/* binding */ ServiceManager)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7770);\n/* harmony import */ var _message_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2032);\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n\n\nclass ServiceManager {\n    async getServicesCapabilitiesAfterCallback(documentIdentifier, message, callback) {\n        let services = await callback(documentIdentifier, message.value, message.mode, message.options);\n        if (services) {\n            return Object.keys(services).reduce((acc, key)=>{\n                var _services_key_serviceInstance, _services_key;\n                acc[key] = ((_services_key = services[key]) === null || _services_key === void 0 ? void 0 : (_services_key_serviceInstance = _services_key.serviceInstance) === null || _services_key_serviceInstance === void 0 ? void 0 : _services_key_serviceInstance.serviceCapabilities) || null;\n                return acc;\n            }, {});\n        }\n    }\n    async aggregateFeatureResponses(serviceInstances, feature, methodName, documentIdentifier, attrs) {\n        return (await Promise.all(this.filterByFeature(serviceInstances, feature).map(async (service)=>{\n            if (Array.isArray(attrs)) {\n                return service[methodName](documentIdentifier, ...attrs);\n            } else {\n                return service[methodName](documentIdentifier, attrs);\n            }\n        }))).filter(_utils__WEBPACK_IMPORTED_MODULE_1__/* .notEmpty */ .z2);\n    }\n    applyOptionsToServices(serviceInstances, documentUri, options) {\n        serviceInstances.forEach((service)=>{\n            service.setOptions(documentUri, options);\n        });\n    }\n    async closeAllConnections() {\n        var services = this.$services;\n        for(let serviceName in services){\n            var _services_serviceName_serviceInstance, _services_serviceName;\n            await ((_services_serviceName = services[serviceName]) === null || _services_serviceName === void 0 ? void 0 : (_services_serviceName_serviceInstance = _services_serviceName.serviceInstance) === null || _services_serviceName_serviceInstance === void 0 ? void 0 : _services_serviceName_serviceInstance.closeConnection());\n        }\n    }\n    static async $initServiceInstance(service, ctx, workspaceUri) {\n        let module;\n        if ('type' in service) {\n            if ([\n                \"socket\",\n                \"webworker\"\n            ].includes(service.type)) {\n                module = await service.module();\n                service.serviceInstance = new module[\"LanguageClient\"](service, ctx, workspaceUri);\n            } else throw \"Unknown service type\";\n        } else {\n            module = await service.module();\n            service.serviceInstance = new module[service.className](service.modes);\n        }\n        if (service.options || service.initializationOptions) {\n            var _service_options, _ref;\n            service.serviceInstance.setGlobalOptions((_ref = (_service_options = service.options) !== null && _service_options !== void 0 ? _service_options : service.initializationOptions) !== null && _ref !== void 0 ? _ref : {});\n        }\n        service.serviceInstance.serviceData = service;\n        return service.serviceInstance;\n    }\n    async $getServicesInstancesByMode(mode) {\n        let services = this.findServicesByMode(mode);\n        if (Object.keys(services).length === 0) {\n            return [];\n        }\n        for(let serviceName in services){\n            await this.initializeService(serviceName);\n        }\n        return services;\n    }\n    async initializeService(serviceName) {\n        let service = this.$services[serviceName];\n        if (!service.serviceInstance) {\n            if (!this.serviceInitPromises[service.id]) {\n                this.serviceInitPromises[service.id] = ServiceManager.$initServiceInstance(service, this.ctx, this.workspaceUri).then((instance)=>{\n                    service.serviceInstance = instance;\n                    service.serviceInstance.serviceName = serviceName;\n                    delete this.serviceInitPromises[service.id]; // Clean up\n                    return instance;\n                });\n            }\n            return this.serviceInitPromises[service.id];\n        } else {\n            if (!service.serviceInstance.serviceName) {\n                service.serviceInstance.serviceName = serviceName;\n            }\n            return service.serviceInstance;\n        }\n    }\n    setGlobalOptions(serviceName, options, merge = false) {\n        let service = this.$services[serviceName];\n        if (!service) return;\n        service.options = merge ? (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .mergeObjects */ .rL)(options, service.options) : options;\n        if (service.serviceInstance) {\n            service.serviceInstance.setGlobalOptions(service.options);\n        }\n    }\n    setWorkspace(workspaceUri) {\n        this.workspaceUri = workspaceUri;\n        Object.values(this.$services).forEach((service)=>{\n            var _service_serviceInstance;\n            (_service_serviceInstance = service.serviceInstance) === null || _service_serviceInstance === void 0 ? void 0 : _service_serviceInstance.setWorkspace(this.workspaceUri);\n        });\n    }\n    async addDocument(documentIdentifier, documentValue, mode, options) {\n        if (!mode || !/^ace\\/mode\\//.test(mode)) return;\n        mode = mode.replace(\"ace/mode/\", \"\");\n        mode = mode.replace(/golang$/, \"go\");\n        let services = await this.$getServicesInstancesByMode(mode);\n        if (Object.keys(services).length === 0) return;\n        let documentItem = {\n            uri: documentIdentifier.uri,\n            version: documentIdentifier.version,\n            languageId: mode,\n            text: documentValue\n        };\n        Object.values(services).forEach((el)=>el.serviceInstance.addDocument(documentItem));\n        this.$sessionIDToMode[documentIdentifier.uri] = mode;\n        return services;\n    }\n    async changeDocumentMode(documentIdentifier, value, mode, options) {\n        this.removeDocument(documentIdentifier);\n        return await this.addDocument(documentIdentifier, value, mode, options);\n    }\n    removeDocument(document) {\n        let services = this.getServicesInstances(document.uri);\n        if (services.length > 0) {\n            services.forEach((el)=>el.removeDocument(document));\n            delete this.$sessionIDToMode[document.uri];\n        }\n    }\n    getServicesInstances(documentUri) {\n        let mode = this.$sessionIDToMode[documentUri];\n        if (!mode) return []; //TODO:\n        let services = this.findServicesByMode(mode);\n        return Object.values(services).map((el)=>el.serviceInstance).filter(_utils__WEBPACK_IMPORTED_MODULE_1__/* .notEmpty */ .z2);\n    }\n    filterByFeature(serviceInstances, feature) {\n        return serviceInstances.filter((el)=>{\n            if (!el.serviceData.features[feature]) {\n                return false;\n            }\n            const capabilities = el.serviceCapabilities;\n            switch(feature){\n                case \"hover\":\n                    return capabilities.hoverProvider == true;\n                case \"completion\":\n                    return capabilities.completionProvider != undefined;\n                case \"completionResolve\":\n                    var _capabilities_completionProvider;\n                    return ((_capabilities_completionProvider = capabilities.completionProvider) === null || _capabilities_completionProvider === void 0 ? void 0 : _capabilities_completionProvider.resolveProvider) === true;\n                case \"format\":\n                    return capabilities.documentRangeFormattingProvider == true || capabilities.documentFormattingProvider == true;\n                case \"diagnostics\":\n                    return capabilities.diagnosticProvider != undefined;\n                case \"signatureHelp\":\n                    return capabilities.signatureHelpProvider != undefined;\n                case \"documentHighlight\":\n                    return capabilities.documentHighlightProvider == true;\n                case \"semanticTokens\":\n                    return capabilities.semanticTokensProvider != undefined;\n                case \"codeAction\":\n                    return capabilities.codeActionProvider != undefined;\n                case \"executeCommand\":\n                    return capabilities.executeCommandProvider != undefined;\n            }\n        });\n    }\n    findServicesByMode(mode) {\n        let servicesWithName = {};\n        Object.entries(this.$services).forEach(([key, value])=>{\n            let extensions = value.modes.split('|');\n            if (extensions.includes(mode)) servicesWithName[key] = this.$services[key];\n        });\n        return servicesWithName;\n    }\n    registerService(name, service) {\n        service.id = name;\n        service.features = this.setDefaultFeaturesState(service.features);\n        this.$services[name] = service;\n    }\n    registerServer(name, clientConfig) {\n        clientConfig.id = name;\n        clientConfig.className = \"LanguageClient\";\n        clientConfig.features = this.setDefaultFeaturesState(clientConfig.features);\n        this.$services[name] = clientConfig;\n    }\n    configureFeatures(name, features) {\n        features = this.setDefaultFeaturesState(features);\n        if (!this.$services[name]) return;\n        this.$services[name].features = features;\n    }\n    setDefaultFeaturesState(serviceFeatures) {\n        var _features, _features1, _features2, _features3, _features4, _features5, _features6, _features7, _features8, _features9;\n        let features = serviceFeatures !== null && serviceFeatures !== void 0 ? serviceFeatures : {};\n        var _hover;\n        (_hover = (_features = features).hover) !== null && _hover !== void 0 ? _hover : _features.hover = true;\n        var _completion;\n        (_completion = (_features1 = features).completion) !== null && _completion !== void 0 ? _completion : _features1.completion = true;\n        var _completionResolve;\n        (_completionResolve = (_features2 = features).completionResolve) !== null && _completionResolve !== void 0 ? _completionResolve : _features2.completionResolve = true;\n        var _format;\n        (_format = (_features3 = features).format) !== null && _format !== void 0 ? _format : _features3.format = true;\n        var _diagnostics;\n        (_diagnostics = (_features4 = features).diagnostics) !== null && _diagnostics !== void 0 ? _diagnostics : _features4.diagnostics = true;\n        var _signatureHelp;\n        (_signatureHelp = (_features5 = features).signatureHelp) !== null && _signatureHelp !== void 0 ? _signatureHelp : _features5.signatureHelp = true;\n        var _documentHighlight;\n        (_documentHighlight = (_features6 = features).documentHighlight) !== null && _documentHighlight !== void 0 ? _documentHighlight : _features6.documentHighlight = true;\n        var _semanticTokens;\n        (_semanticTokens = (_features7 = features).semanticTokens) !== null && _semanticTokens !== void 0 ? _semanticTokens : _features7.semanticTokens = true;\n        var _codeAction;\n        (_codeAction = (_features8 = features).codeAction) !== null && _codeAction !== void 0 ? _codeAction : _features8.codeAction = true;\n        var _executeCommand;\n        (_executeCommand = (_features9 = features).executeCommand) !== null && _executeCommand !== void 0 ? _executeCommand : _features9.executeCommand = true;\n        return features;\n    }\n    constructor(ctx){\n        _define_property(this, \"$services\", {});\n        _define_property(this, \"serviceInitPromises\", {});\n        _define_property(this, \"$sessionIDToMode\", {});\n        _define_property(this, \"ctx\", void 0);\n        _define_property(this, \"workspaceUri\", void 0);\n        this.ctx = ctx;\n        let doValidation = async (document, servicesInstances)=>{\n            servicesInstances !== null && servicesInstances !== void 0 ? servicesInstances : servicesInstances = this.getServicesInstances(document.uri);\n            if (servicesInstances.length === 0) {\n                return;\n            }\n            //this is list of documents linked to services\n            let documentUrisList = Object.keys(servicesInstances[0].documents);\n            servicesInstances = this.filterByFeature(servicesInstances, \"diagnostics\");\n            servicesInstances = servicesInstances.filter((el)=>{\n                return el.serviceCapabilities.diagnosticProvider;\n            });\n            if (servicesInstances.length === 0) {\n                return;\n            }\n            let postMessage = {\n                \"type\": _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.validate\n            };\n            for (let documentUri of documentUrisList){\n                var _ref;\n                let diagnostics = (_ref = await Promise.all(servicesInstances.map((el)=>{\n                    return el.doValidation({\n                        uri: documentUri\n                    });\n                }))) !== null && _ref !== void 0 ? _ref : [];\n                postMessage[\"documentUri\"] = documentUri;\n                postMessage[\"value\"] = diagnostics.flat();\n                ctx.postMessage(postMessage);\n            }\n        };\n        let provideValidationForServiceInstance = async (serviceName)=>{\n            let service = this.$services[serviceName];\n            if (!service) return;\n            var serviceInstance = service.serviceInstance;\n            if (serviceInstance) await doValidation(undefined, [\n                serviceInstance\n            ]);\n        };\n        ctx.addEventListener(\"message\", async (ev)=>{\n            let message = ev.data;\n            var _message_sessionId;\n            let sessionID = (_message_sessionId = message[\"sessionId\"]) !== null && _message_sessionId !== void 0 ? _message_sessionId : \"\";\n            var _message_documentUri;\n            let documentUri = (_message_documentUri = message[\"documentUri\"]) !== null && _message_documentUri !== void 0 ? _message_documentUri : \"\";\n            let version = message[\"version\"];\n            let postMessage = {\n                \"type\": message.type,\n                \"sessionId\": sessionID,\n                \"callbackId\": message[\"callbackId\"]\n            };\n            let serviceInstances = this.getServicesInstances(documentUri);\n            let documentIdentifier = {\n                uri: documentUri,\n                version: version\n            };\n            switch(message.type){\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.format:\n                    serviceInstances = this.filterByFeature(serviceInstances, \"format\");\n                    if (serviceInstances.length > 0) {\n                        //we will use only first service to format\n                        postMessage[\"value\"] = await serviceInstances[0].format(documentIdentifier, message.value, message.format);\n                    }\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.complete:\n                    postMessage[\"value\"] = (await Promise.all(this.filterByFeature(serviceInstances, \"completion\").map(async (service)=>{\n                        return {\n                            completions: await service.doComplete(documentIdentifier, message[\"value\"]),\n                            service: service.serviceData.className\n                        };\n                    }))).filter(_utils__WEBPACK_IMPORTED_MODULE_1__/* .notEmpty */ .z2);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.resolveCompletion:\n                    var _this_filterByFeature_find;\n                    let serviceName = message.value[\"service\"];\n                    postMessage[\"value\"] = await ((_this_filterByFeature_find = this.filterByFeature(serviceInstances, \"completionResolve\").find((service)=>{\n                        if (service.serviceData.className === serviceName) {\n                            return service;\n                        }\n                    })) === null || _this_filterByFeature_find === void 0 ? void 0 : _this_filterByFeature_find.doResolve(message.value));\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.change:\n                    serviceInstances.forEach((service)=>{\n                        service.setValue(documentIdentifier, message[\"value\"]);\n                    });\n                    await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.applyDelta:\n                    serviceInstances.forEach((service)=>{\n                        service.applyDeltas(documentIdentifier, message[\"value\"]);\n                    });\n                    await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.hover:\n                    postMessage[\"value\"] = await this.aggregateFeatureResponses(serviceInstances, \"hover\", \"doHover\", documentIdentifier, message.value);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.validate:\n                    postMessage[\"value\"] = await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.init:\n                    postMessage[\"value\"] = await this.getServicesCapabilitiesAfterCallback(documentIdentifier, message, this.addDocument.bind(this));\n                    await doValidation(documentIdentifier);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.changeMode:\n                    postMessage[\"value\"] = await this.getServicesCapabilitiesAfterCallback(documentIdentifier, message, this.changeDocumentMode.bind(this));\n                    await doValidation(documentIdentifier);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.changeOptions:\n                    this.applyOptionsToServices(serviceInstances, documentUri, message.options);\n                    await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.closeDocument:\n                    this.removeDocument(documentIdentifier);\n                    await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.closeConnection:\n                    await this.closeAllConnections();\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.globalOptions:\n                    this.setGlobalOptions(message.serviceName, message.options, message.merge);\n                    await provideValidationForServiceInstance(message.serviceName);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.configureFeatures:\n                    this.configureFeatures(message.serviceName, message.options);\n                    await provideValidationForServiceInstance(message.serviceName);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.signatureHelp:\n                    postMessage[\"value\"] = await this.aggregateFeatureResponses(serviceInstances, \"signatureHelp\", \"provideSignatureHelp\", documentIdentifier, message.value);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.documentHighlight:\n                    let highlights = await this.aggregateFeatureResponses(serviceInstances, \"documentHighlight\", \"findDocumentHighlights\", documentIdentifier, message.value);\n                    postMessage[\"value\"] = highlights.flat();\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.getSemanticTokens:\n                    serviceInstances = this.filterByFeature(serviceInstances, \"semanticTokens\");\n                    if (serviceInstances.length > 0) {\n                        //we will use only first service\n                        postMessage[\"value\"] = await serviceInstances[0].getSemanticTokens(documentIdentifier, message.value);\n                    }\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.getCodeActions:\n                    let value = message.value;\n                    let context = message.context;\n                    postMessage[\"value\"] = (await Promise.all(this.filterByFeature(serviceInstances, \"codeAction\").map(async (service)=>{\n                        return {\n                            codeActions: await service.getCodeActions(documentIdentifier, value, context),\n                            service: service.serviceName\n                        };\n                    }))).filter(_utils__WEBPACK_IMPORTED_MODULE_1__/* .notEmpty */ .z2);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.executeCommand:\n                    var _this_$services_message_serviceName_serviceInstance, _this_$services_message_serviceName;\n                    postMessage[\"value\"] = (_this_$services_message_serviceName = this.$services[message.serviceName]) === null || _this_$services_message_serviceName === void 0 ? void 0 : (_this_$services_message_serviceName_serviceInstance = _this_$services_message_serviceName.serviceInstance) === null || _this_$services_message_serviceName_serviceInstance === void 0 ? void 0 : _this_$services_message_serviceName_serviceInstance.executeCommand(message.value, message.args);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.appliedEdit:\n                    var _this_$services_message_serviceName_serviceInstance1, _this_$services_message_serviceName1;\n                    postMessage[\"value\"] = (_this_$services_message_serviceName1 = this.$services[message.serviceName]) === null || _this_$services_message_serviceName1 === void 0 ? void 0 : (_this_$services_message_serviceName_serviceInstance1 = _this_$services_message_serviceName1.serviceInstance) === null || _this_$services_message_serviceName_serviceInstance1 === void 0 ? void 0 : _this_$services_message_serviceName_serviceInstance1.sendAppliedResult(message.value, message.callbackId);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.setWorkspace:\n                    this.setWorkspace(message.value);\n                    break;\n            }\n            ctx.postMessage(postMessage);\n        });\n    }\n}\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});","import { ServiceManager } from \"ace-linters/build/service-manager\";\n\nconst manager = new ServiceManager(self);\n\nmanager.registerService(\"css\", {\n  module: () => import(\"ace-linters/build/css-service\"),\n  className: \"CssService\",\n  modes: \"css\",\n});\n\nmanager.registerService(\"javascript\", {\n  module: () => import(\"ace-linters/build/javascript-service\"),\n  className: \"JavascriptService\",\n  modes: \"javascript\",\n});\n\nmanager.registerService(\"json\", {\n  module: () => import(\"ace-linters/build/json-service\"),\n  className: \"JsonService\",\n  modes: \"json\",\n});\n\nmanager.registerService(\"python\", {\n  module: () => import(\"ace-linters/build/python-service\"),\n  className: \"PythonService\",\n  modes: \"python\",\n});\n"],"names":["root","factory","module","this","__webpack_modules__","__unused_webpack_module","__webpack_exports__","__webpack_require__","MessageType","mergeObjects","notEmpty","obj1","obj2","excludeUndefined","excludeUndefinedValues","mergedObjects","key","obj","filteredEntries","_","value","__webpack_module_cache__","moduleId","cachedModule","exports","definition","prop","ServiceManager","_utils__WEBPACK_IMPORTED_MODULE_1__","_message_types__WEBPACK_IMPORTED_MODULE_0__","_define_property","documentIdentifier","message","callback","services","acc","_services_key_serviceInstance","_services_key","serviceInstances","feature","methodName","attrs","service","documentUri","options","serviceName","_services_serviceName_serviceInstance","_services_serviceName","ctx","workspaceUri","_service_options","_ref","mode","instance","merge","_service_serviceInstance","documentValue","documentItem","el","document","capabilities","_capabilities_completionProvider","servicesWithName","name","clientConfig","features","serviceFeatures","_features","_features1","_features2","_features3","_features4","_features5","_features6","_features7","_features8","_features9","_hover","_completion","_completionResolve","_format","_diagnostics","_signatureHelp","_documentHighlight","_semanticTokens","_codeAction","_executeCommand","doValidation","servicesInstances","documentUrisList","postMessage","diagnostics","provideValidationForServiceInstance","serviceInstance","ev","_message_sessionId","sessionID","_message_documentUri","version","_this_filterByFeature_find","highlights","context","_this_$services_message_serviceName_serviceInstance","_this_$services_message_serviceName","_this_$services_message_serviceName_serviceInstance1","_this_$services_message_serviceName1","manager","n"],"mappings":"wPAAC,SAA0CA,EAAMC,EAAS,CAExDC,EAAA,QAAiBD,GAOlB,GAAEE,EAAM,KACQ,IAAM,CAEb,IAAIC,EAAuB,CAE/B,KACC,CAACC,EAAyBC,EAAqBC,IAAwB,CAEzDA,EAAoB,EAAED,EAAqB,CACzC,GAAI,IAAqBE,CAChD,CAAsB,EA4NtB,IAAIA,GACH,SAASA,EAAa,CACnBA,EAAYA,EAAY,KAAU,CAAC,EAAI,OACvCA,EAAYA,EAAY,OAAY,CAAC,EAAI,SACzCA,EAAYA,EAAY,SAAc,CAAC,EAAI,WAC3CA,EAAYA,EAAY,kBAAuB,CAAC,EAAI,oBACpDA,EAAYA,EAAY,OAAY,CAAC,EAAI,SACzCA,EAAYA,EAAY,MAAW,CAAC,EAAI,QACxCA,EAAYA,EAAY,SAAc,CAAC,EAAI,WAC3CA,EAAYA,EAAY,WAAgB,CAAC,EAAI,aAC7CA,EAAYA,EAAY,WAAgB,CAAC,EAAI,aAC7CA,EAAYA,EAAY,cAAmB,CAAC,EAAI,gBAChDA,EAAYA,EAAY,cAAmB,EAAE,EAAI,gBACjDA,EAAYA,EAAY,cAAmB,EAAE,EAAI,gBACjDA,EAAYA,EAAY,kBAAuB,EAAE,EAAI,oBACrDA,EAAYA,EAAY,cAAmB,EAAE,EAAI,gBACjDA,EAAYA,EAAY,kBAAuB,EAAE,EAAI,oBACrDA,EAAYA,EAAY,gBAAqB,EAAE,EAAI,kBACnDA,EAAYA,EAAY,mBAAwB,EAAE,EAAI,qBACtDA,EAAYA,EAAY,kBAAuB,EAAE,EAAI,oBACrDA,EAAYA,EAAY,eAAoB,EAAE,EAAI,iBAClDA,EAAYA,EAAY,eAAoB,EAAE,EAAI,iBAClDA,EAAYA,EAAY,UAAe,EAAE,EAAI,YAC7CA,EAAYA,EAAY,YAAiB,EAAE,EAAI,cAC/CA,EAAYA,EAAY,aAAkB,EAAE,EAAI,cACnD,GAAEA,IAAgBA,EAAc,CAAE,EAAC,CAGpC,EAEM,KACC,CAACH,EAAyBC,EAAqBC,IAAwB,CAEzDA,EAAoB,EAAED,EAAqB,CACzC,GAAI,IAAqBG,EACzB,GAAI,IAAqBC,CAChD,CAAsB,EAGtB,SAASD,EAAaE,EAAMC,EAAMC,EAAmB,GAAO,CACxD,GAAI,CAACF,EAAM,OAAOC,EAClB,GAAI,CAACA,EAAM,OAAOD,EACdE,IACAF,EAAOG,EAAuBH,CAAI,EAClCC,EAAOE,EAAuBF,CAAI,GAEtC,MAAMG,EAAgB,CAClB,GAAGH,EACH,GAAGD,CACX,EACI,UAAWK,KAAO,OAAO,KAAKD,CAAa,EACnCJ,EAAKK,CAAG,GAAKJ,EAAKI,CAAG,IACjB,MAAM,QAAQL,EAAKK,CAAG,CAAC,EACvBD,EAAcC,CAAG,EAAIL,EAAKK,CAAG,EAAE,OAAOJ,EAAKI,CAAG,CAAC,EACxC,MAAM,QAAQJ,EAAKI,CAAG,CAAC,EAC9BD,EAAcC,CAAG,EAAIJ,EAAKI,CAAG,EAAE,OAAOL,EAAKK,CAAG,CAAC,EACxC,OAAOL,EAAKK,CAAG,GAAM,UAAY,OAAOJ,EAAKI,CAAG,GAAM,WAC7DD,EAAcC,CAAG,EAAIP,EAAaE,EAAKK,CAAG,EAAGJ,EAAKI,CAAG,CAAC,IAIlE,OAAOD,CACV,CACD,SAASD,EAAuBG,EAAK,CACjC,MAAMC,EAAkB,OAAO,QAAQD,CAAG,EAAE,OAAO,CAAC,CAACE,EAAGC,CAAK,IAAIA,IAAU,MAAS,EACpF,OAAO,OAAO,YAAYF,CAAe,CAC5C,CACD,SAASR,EAASU,EAAO,CACrB,OAAOA,GAAU,IACpB,CA+CD,CAEA,EAGcC,EAA2B,CAAA,EAG/B,SAASd,EAAoBe,EAAU,CAEtC,IAAIC,EAAeF,EAAyBC,CAAQ,EACpD,GAAIC,IAAiB,OACpB,OAAOA,EAAa,QAGrB,IAAIrB,EAASmB,EAAyBC,CAAQ,EAAI,CAGjD,QAAS,CAAE,CACvB,EAGW,OAAAlB,EAAoBkB,CAAQ,EAAEpB,EAAQA,EAAO,QAASK,CAAmB,EAGlEL,EAAO,OACd,CAMAK,EAAoB,EAAI,CAACiB,EAASC,IAAe,CAChD,QAAQT,KAAOS,EACXlB,EAAoB,EAAEkB,EAAYT,CAAG,GAAK,CAACT,EAAoB,EAAEiB,EAASR,CAAG,GAC/E,OAAO,eAAeQ,EAASR,EAAK,CAAE,WAAY,GAAM,IAAKS,EAAWT,CAAG,CAAG,CAAA,CAG5F,EAKWT,EAAoB,EAAI,CAACU,EAAKS,IAAU,OAAO,UAAU,eAAe,KAAKT,EAAKS,CAAI,EAMtFnB,EAAoB,EAAKiB,GAAY,CACjC,OAAO,OAAW,KAAe,OAAO,aAC1C,OAAO,eAAeA,EAAS,OAAO,YAAa,CAAE,MAAO,QAAQ,CAAE,EAEvE,OAAO,eAAeA,EAAS,aAAc,CAAE,MAAO,EAAI,CAAE,CACxE,EAIA,IAAIlB,EAAsB,CAAA,EAC1BC,EAAoB,EAAED,CAAmB,EACpBC,EAAoB,EAAED,EAAqB,CACzC,eAAgB,IAAqBqB,CAC5D,CAAsB,EACD,IAAIC,EAAsCrB,EAAoB,IAAI,EAC9DsB,EAA8CtB,EAAoB,IAAI,EAC/F,SAASuB,EAAiBb,EAAKD,EAAKI,EAAO,CACvC,OAAIJ,KAAOC,EACP,OAAO,eAAeA,EAAKD,EAAK,CAC5B,MAAOI,EACP,WAAY,GACZ,aAAc,GACd,SAAU,EACtB,CAAS,EAEDH,EAAID,CAAG,EAAII,EAERH,CACV,CAGD,MAAMU,CAAe,CACjB,MAAM,qCAAqCI,EAAoBC,EAASC,EAAU,CAC9E,IAAIC,EAAW,MAAMD,EAASF,EAAoBC,EAAQ,MAAOA,EAAQ,KAAMA,EAAQ,OAAO,EAC9F,GAAIE,EACA,OAAO,OAAO,KAAKA,CAAQ,EAAE,OAAO,CAACC,EAAKnB,IAAM,CAC5C,IAAIoB,EAA+BC,EACnC,OAAAF,EAAInB,CAAG,IAAMqB,EAAgBH,EAASlB,CAAG,KAAO,MAAQqB,IAAkB,SAAmBD,EAAgCC,EAAc,mBAAqB,MAAQD,IAAkC,OAAvH,OAAyIA,EAA8B,sBAAwB,KAC3QD,CACV,EAAE,CAAE,CAAA,CAEZ,CACD,MAAM,0BAA0BG,EAAkBC,EAASC,EAAYT,EAAoBU,EAAO,CAC9F,OAAQ,MAAM,QAAQ,IAAI,KAAK,gBAAgBH,EAAkBC,CAAO,EAAE,IAAI,MAAOG,GAC7E,MAAM,QAAQD,CAAK,EACZC,EAAQF,CAAU,EAAET,EAAoB,GAAGU,CAAK,EAEhDC,EAAQF,CAAU,EAAET,EAAoBU,CAAK,CAE3D,CAAC,GAAG,OAAOb,EAAoD,EAAE,CACrE,CACD,uBAAuBU,EAAkBK,EAAaC,EAAS,CAC3DN,EAAiB,QAASI,GAAU,CAChCA,EAAQ,WAAWC,EAAaC,CAAO,CACnD,CAAS,CACJ,CACD,MAAM,qBAAsB,CACxB,IAAIV,EAAW,KAAK,UACpB,QAAQW,KAAeX,EAAS,CAC5B,IAAIY,EAAuCC,EAC3C,OAAQA,EAAwBb,EAASW,CAAW,KAAO,MAAQE,IAA0B,SAAmBD,EAAwCC,EAAsB,mBAAqB,MAAQD,IAA0C,OAA/I,OAAiKA,EAAsC,gBAAe,EAC/T,CACJ,CACD,aAAa,qBAAqBJ,EAASM,EAAKC,EAAc,CAC1D,IAAI/C,EACJ,GAAI,SAAUwC,EACV,GAAI,CACA,SACA,WAChB,EAAc,SAASA,EAAQ,IAAI,EACnBxC,EAAS,MAAMwC,EAAQ,SACvBA,EAAQ,gBAAkB,IAAIxC,EAAO,eAAkBwC,EAASM,EAAKC,CAAY,MAC9E,MAAM,4BAEb/C,EAAS,MAAMwC,EAAQ,SACvBA,EAAQ,gBAAkB,IAAIxC,EAAOwC,EAAQ,SAAS,EAAEA,EAAQ,KAAK,EAEzE,GAAIA,EAAQ,SAAWA,EAAQ,sBAAuB,CAClD,IAAIQ,EAAkBC,EACtBT,EAAQ,gBAAgB,kBAAkBS,GAAQD,EAAmBR,EAAQ,WAAa,MAAQQ,IAAqB,OAASA,EAAmBR,EAAQ,yBAA2B,MAAQS,IAAS,OAASA,EAAO,CAAA,CAAE,CAC5N,CACD,OAAAT,EAAQ,gBAAgB,YAAcA,EAC/BA,EAAQ,eAClB,CACD,MAAM,4BAA4BU,EAAM,CACpC,IAAIlB,EAAW,KAAK,mBAAmBkB,CAAI,EAC3C,GAAI,OAAO,KAAKlB,CAAQ,EAAE,SAAW,EACjC,MAAO,GAEX,QAAQW,KAAeX,EACnB,MAAM,KAAK,kBAAkBW,CAAW,EAE5C,OAAOX,CACV,CACD,MAAM,kBAAkBW,EAAa,CACjC,IAAIH,EAAU,KAAK,UAAUG,CAAW,EACxC,OAAKH,EAAQ,iBAWJA,EAAQ,gBAAgB,cACzBA,EAAQ,gBAAgB,YAAcG,GAEnCH,EAAQ,kBAbV,KAAK,oBAAoBA,EAAQ,EAAE,IACpC,KAAK,oBAAoBA,EAAQ,EAAE,EAAIf,EAAe,qBAAqBe,EAAS,KAAK,IAAK,KAAK,YAAY,EAAE,KAAMW,IACnHX,EAAQ,gBAAkBW,EAC1BX,EAAQ,gBAAgB,YAAcG,EACtC,OAAO,KAAK,oBAAoBH,EAAQ,EAAE,EACnCW,EACV,GAEE,KAAK,oBAAoBX,EAAQ,EAAE,EAOjD,CACD,iBAAiBG,EAAaD,EAASU,EAAQ,GAAO,CAClD,IAAIZ,EAAU,KAAK,UAAUG,CAAW,EACnCH,IACLA,EAAQ,QAAUY,KAAW1B,EAAwD,IAAIgB,EAASF,EAAQ,OAAO,EAAIE,EACjHF,EAAQ,iBACRA,EAAQ,gBAAgB,iBAAiBA,EAAQ,OAAO,EAE/D,CACD,aAAaO,EAAc,CACvB,KAAK,aAAeA,EACpB,OAAO,OAAO,KAAK,SAAS,EAAE,QAASP,GAAU,CAC7C,IAAIa,GACHA,EAA2Bb,EAAQ,mBAAqB,MAAQa,IAA6B,QAAkBA,EAAyB,aAAa,KAAK,YAAY,CACnL,CAAS,CACJ,CACD,MAAM,YAAYxB,EAAoByB,EAAeJ,EAAMR,EAAS,CAChE,GAAI,CAACQ,GAAQ,CAAC,eAAe,KAAKA,CAAI,EAAG,OACzCA,EAAOA,EAAK,QAAQ,YAAa,EAAE,EACnCA,EAAOA,EAAK,QAAQ,UAAW,IAAI,EACnC,IAAIlB,EAAW,MAAM,KAAK,4BAA4BkB,CAAI,EAC1D,GAAI,OAAO,KAAKlB,CAAQ,EAAE,SAAW,EAAG,OACxC,IAAIuB,EAAe,CACf,IAAK1B,EAAmB,IACxB,QAASA,EAAmB,QAC5B,WAAYqB,EACZ,KAAMI,CAClB,EACQ,cAAO,OAAOtB,CAAQ,EAAE,QAASwB,GAAKA,EAAG,gBAAgB,YAAYD,CAAY,CAAC,EAClF,KAAK,iBAAiB1B,EAAmB,GAAG,EAAIqB,EACzClB,CACV,CACD,MAAM,mBAAmBH,EAAoBX,EAAOgC,EAAMR,EAAS,CAC/D,YAAK,eAAeb,CAAkB,EAC/B,MAAM,KAAK,YAAYA,EAAoBX,EAAOgC,EAAMR,CAAO,CACzE,CACD,eAAee,EAAU,CACrB,IAAIzB,EAAW,KAAK,qBAAqByB,EAAS,GAAG,EACjDzB,EAAS,OAAS,IAClBA,EAAS,QAASwB,GAAKA,EAAG,eAAeC,CAAQ,CAAC,EAClD,OAAO,KAAK,iBAAiBA,EAAS,GAAG,EAEhD,CACD,qBAAqBhB,EAAa,CAC9B,IAAIS,EAAO,KAAK,iBAAiBT,CAAW,EAC5C,GAAI,CAACS,EAAM,MAAO,GAClB,IAAIlB,EAAW,KAAK,mBAAmBkB,CAAI,EAC3C,OAAO,OAAO,OAAOlB,CAAQ,EAAE,IAAKwB,GAAKA,EAAG,eAAe,EAAE,OAAO9B,EAAoD,EAAE,CAC7H,CACD,gBAAgBU,EAAkBC,EAAS,CACvC,OAAOD,EAAiB,OAAQoB,GAAK,CACjC,GAAI,CAACA,EAAG,YAAY,SAASnB,CAAO,EAChC,MAAO,GAEX,MAAMqB,EAAeF,EAAG,oBACxB,OAAOnB,EAAO,CACV,IAAK,QACD,OAAOqB,EAAa,eAAiB,GACzC,IAAK,aACD,OAAOA,EAAa,oBAAsB,KAC9C,IAAK,oBACD,IAAIC,EACJ,QAASA,EAAmCD,EAAa,sBAAwB,MAAQC,IAAqC,OAAS,OAASA,EAAiC,mBAAqB,GAC1M,IAAK,SACD,OAAOD,EAAa,iCAAmC,IAAQA,EAAa,4BAA8B,GAC9G,IAAK,cACD,OAAOA,EAAa,oBAAsB,KAC9C,IAAK,gBACD,OAAOA,EAAa,uBAAyB,KACjD,IAAK,oBACD,OAAOA,EAAa,2BAA6B,GACrD,IAAK,iBACD,OAAOA,EAAa,wBAA0B,KAClD,IAAK,aACD,OAAOA,EAAa,oBAAsB,KAC9C,IAAK,iBACD,OAAOA,EAAa,wBAA0B,IACrD,CACb,CAAS,CACJ,CACD,mBAAmBR,EAAM,CACrB,IAAIU,EAAmB,CAAA,EACvB,cAAO,QAAQ,KAAK,SAAS,EAAE,QAAQ,CAAC,CAAC9C,EAAKI,CAAK,IAAI,CAClCA,EAAM,MAAM,MAAM,GAAG,EACvB,SAASgC,CAAI,IAAGU,EAAiB9C,CAAG,EAAI,KAAK,UAAUA,CAAG,EACrF,CAAS,EACM8C,CACV,CACD,gBAAgBC,EAAMrB,EAAS,CAC3BA,EAAQ,GAAKqB,EACbrB,EAAQ,SAAW,KAAK,wBAAwBA,EAAQ,QAAQ,EAChE,KAAK,UAAUqB,CAAI,EAAIrB,CAC1B,CACD,eAAeqB,EAAMC,EAAc,CAC/BA,EAAa,GAAKD,EAClBC,EAAa,UAAY,iBACzBA,EAAa,SAAW,KAAK,wBAAwBA,EAAa,QAAQ,EAC1E,KAAK,UAAUD,CAAI,EAAIC,CAC1B,CACD,kBAAkBD,EAAME,EAAU,CAC9BA,EAAW,KAAK,wBAAwBA,CAAQ,EAC3C,KAAK,UAAUF,CAAI,IACxB,KAAK,UAAUA,CAAI,EAAE,SAAWE,EACnC,CACD,wBAAwBC,EAAiB,CACrC,IAAIC,EAAWC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAC/G,IAAIX,EAAWC,GAA2E,GAC1F,IAAIW,GACHA,GAAUV,EAAYF,GAAU,SAAW,MAAQY,IAAW,SAAkBV,EAAU,MAAQ,IACnG,IAAIW,GACHA,GAAeV,EAAaH,GAAU,cAAgB,MAAQa,IAAgB,SAAuBV,EAAW,WAAa,IAC9H,IAAIW,GACHA,GAAsBV,EAAaJ,GAAU,qBAAuB,MAAQc,IAAuB,SAA8BV,EAAW,kBAAoB,IACjK,IAAIW,GACHA,GAAWV,EAAaL,GAAU,UAAY,MAAQe,IAAY,SAAmBV,EAAW,OAAS,IAC1G,IAAIW,GACHA,GAAgBV,EAAaN,GAAU,eAAiB,MAAQgB,IAAiB,SAAwBV,EAAW,YAAc,IACnI,IAAIW,GACHA,GAAkBV,EAAaP,GAAU,iBAAmB,MAAQiB,IAAmB,SAA0BV,EAAW,cAAgB,IAC7I,IAAIW,GACHA,GAAsBV,EAAaR,GAAU,qBAAuB,MAAQkB,IAAuB,SAA8BV,EAAW,kBAAoB,IACjK,IAAIW,GACHA,GAAmBV,EAAaT,GAAU,kBAAoB,MAAQmB,IAAoB,SAA2BV,EAAW,eAAiB,IAClJ,IAAIW,GACHA,GAAeV,EAAaV,GAAU,cAAgB,MAAQoB,IAAgB,SAAuBV,EAAW,WAAa,IAC9H,IAAIW,EACJ,OAACA,GAAmBV,EAAaX,GAAU,kBAAoB,MAAQqB,IAAoB,SAA2BV,EAAW,eAAiB,IAC3IX,CACV,CACD,YAAYjB,EAAI,CACZlB,EAAiB,KAAM,YAAa,CAAA,CAAE,EACtCA,EAAiB,KAAM,sBAAuB,CAAA,CAAE,EAChDA,EAAiB,KAAM,mBAAoB,CAAA,CAAE,EAC7CA,EAAiB,KAAM,MAAO,MAAM,EACpCA,EAAiB,KAAM,eAAgB,MAAM,EAC7C,KAAK,IAAMkB,EACX,IAAIuC,EAAe,MAAO5B,EAAU6B,IAAoB,CAEpD,GADAA,IAAiFA,EAAoB,KAAK,qBAAqB7B,EAAS,GAAG,GACvI6B,EAAkB,SAAW,EAC7B,OAGJ,IAAIC,EAAmB,OAAO,KAAKD,EAAkB,CAAC,EAAE,SAAS,EAKjE,GAJAA,EAAoB,KAAK,gBAAgBA,EAAmB,aAAa,EACzEA,EAAoBA,EAAkB,OAAQ9B,GACnCA,EAAG,oBAAoB,kBACjC,EACG8B,EAAkB,SAAW,EAC7B,OAEJ,IAAIE,EAAc,CACd,KAAQ7D,EAA+D,GAAG,QAC1F,EACY,QAASc,KAAe8C,EAAiB,CACrC,IAAItC,EACJ,IAAIwC,GAAexC,EAAO,MAAM,QAAQ,IAAIqC,EAAkB,IAAK9B,GACxDA,EAAG,aAAa,CACnB,IAAKf,CAC7B,CAAqB,CACJ,CAAC,KAAO,MAAQQ,IAAS,OAASA,EAAO,GAC1CuC,EAAY,YAAiB/C,EAC7B+C,EAAY,MAAWC,EAAY,KAAI,EACvC3C,EAAI,YAAY0C,CAAW,CAC9B,CACb,EACYE,EAAsC,MAAO/C,GAAc,CAC3D,IAAIH,EAAU,KAAK,UAAUG,CAAW,EACxC,GAAKH,EACL,KAAImD,EAAkBnD,EAAQ,gBAC1BmD,GAAiB,MAAMN,EAAa,OAAW,CAC/CM,CAChB,CAAa,EACb,EACQ7C,EAAI,iBAAiB,UAAW,MAAO8C,GAAK,CACxC,IAAI9D,EAAU8D,EAAG,KACjB,IAAIC,EACJ,IAAIC,GAAaD,EAAqB/D,EAAQ,aAAkB,MAAQ+D,IAAuB,OAASA,EAAqB,GAC7H,IAAIE,EACJ,IAAItD,GAAesD,EAAuBjE,EAAQ,eAAoB,MAAQiE,IAAyB,OAASA,EAAuB,GACnIC,EAAUlE,EAAQ,QAClB0D,EAAc,CACd,KAAQ1D,EAAQ,KAChB,UAAagE,EACb,WAAchE,EAAQ,UACtC,EACgBM,EAAmB,KAAK,qBAAqBK,CAAW,EACxDZ,EAAqB,CACrB,IAAKY,EACL,QAASuD,CACzB,EACY,OAAOlE,EAAQ,KAAI,CACf,KAAKH,EAA+D,GAAG,OACnES,EAAmB,KAAK,gBAAgBA,EAAkB,QAAQ,EAC9DA,EAAiB,OAAS,IAE1BoD,EAAY,MAAW,MAAMpD,EAAiB,CAAC,EAAE,OAAOP,EAAoBC,EAAQ,MAAOA,EAAQ,MAAM,GAE7G,MACJ,KAAKH,EAA+D,GAAG,SACnE6D,EAAY,OAAY,MAAM,QAAQ,IAAI,KAAK,gBAAgBpD,EAAkB,YAAY,EAAE,IAAI,MAAOI,IAC/F,CACH,YAAa,MAAMA,EAAQ,WAAWX,EAAoBC,EAAQ,KAAQ,EAC1E,QAASU,EAAQ,YAAY,SACzD,EACqB,CAAC,GAAG,OAAOd,EAAoD,EAAE,EAClE,MACJ,KAAKC,EAA+D,GAAG,kBACnE,IAAIsE,EACJ,IAAItD,EAAcb,EAAQ,MAAM,QAChC0D,EAAY,MAAW,OAAQS,EAA6B,KAAK,gBAAgB7D,EAAkB,mBAAmB,EAAE,KAAMI,GAAU,CACpI,GAAIA,EAAQ,YAAY,YAAcG,EAClC,OAAOH,CAEd,CAAA,KAAO,MAAQyD,IAA+B,OAAS,OAASA,EAA2B,UAAUnE,EAAQ,KAAK,GACnH,MACJ,KAAKH,EAA+D,GAAG,OACnES,EAAiB,QAASI,GAAU,CAChCA,EAAQ,SAASX,EAAoBC,EAAQ,KAAQ,CAC7E,CAAqB,EACD,MAAMuD,EAAaxD,EAAoBO,CAAgB,EACvD,MACJ,KAAKT,EAA+D,GAAG,WACnES,EAAiB,QAASI,GAAU,CAChCA,EAAQ,YAAYX,EAAoBC,EAAQ,KAAQ,CAChF,CAAqB,EACD,MAAMuD,EAAaxD,EAAoBO,CAAgB,EACvD,MACJ,KAAKT,EAA+D,GAAG,MACnE6D,EAAY,MAAW,MAAM,KAAK,0BAA0BpD,EAAkB,QAAS,UAAWP,EAAoBC,EAAQ,KAAK,EACnI,MACJ,KAAKH,EAA+D,GAAG,SACnE6D,EAAY,MAAW,MAAMH,EAAaxD,EAAoBO,CAAgB,EAC9E,MACJ,KAAKT,EAA+D,GAAG,KACnE6D,EAAY,MAAW,MAAM,KAAK,qCAAqC3D,EAAoBC,EAAS,KAAK,YAAY,KAAK,IAAI,CAAC,EAC/H,MAAMuD,EAAaxD,CAAkB,EACrC,MACJ,KAAKF,EAA+D,GAAG,WACnE6D,EAAY,MAAW,MAAM,KAAK,qCAAqC3D,EAAoBC,EAAS,KAAK,mBAAmB,KAAK,IAAI,CAAC,EACtI,MAAMuD,EAAaxD,CAAkB,EACrC,MACJ,KAAKF,EAA+D,GAAG,cACnE,KAAK,uBAAuBS,EAAkBK,EAAaX,EAAQ,OAAO,EAC1E,MAAMuD,EAAaxD,EAAoBO,CAAgB,EACvD,MACJ,KAAKT,EAA+D,GAAG,cACnE,KAAK,eAAeE,CAAkB,EACtC,MAAMwD,EAAaxD,EAAoBO,CAAgB,EACvD,MACJ,KAAKT,EAA+D,GAAG,gBACnE,MAAM,KAAK,sBACX,MACJ,KAAKA,EAA+D,GAAG,cACnE,KAAK,iBAAiBG,EAAQ,YAAaA,EAAQ,QAASA,EAAQ,KAAK,EACzE,MAAM4D,EAAoC5D,EAAQ,WAAW,EAC7D,MACJ,KAAKH,EAA+D,GAAG,kBACnE,KAAK,kBAAkBG,EAAQ,YAAaA,EAAQ,OAAO,EAC3D,MAAM4D,EAAoC5D,EAAQ,WAAW,EAC7D,MACJ,KAAKH,EAA+D,GAAG,cACnE6D,EAAY,MAAW,MAAM,KAAK,0BAA0BpD,EAAkB,gBAAiB,uBAAwBP,EAAoBC,EAAQ,KAAK,EACxJ,MACJ,KAAKH,EAA+D,GAAG,kBACnE,IAAIuE,EAAa,MAAM,KAAK,0BAA0B9D,EAAkB,oBAAqB,yBAA0BP,EAAoBC,EAAQ,KAAK,EACxJ0D,EAAY,MAAWU,EAAW,KAAI,EACtC,MACJ,KAAKvE,EAA+D,GAAG,kBACnES,EAAmB,KAAK,gBAAgBA,EAAkB,gBAAgB,EACtEA,EAAiB,OAAS,IAE1BoD,EAAY,MAAW,MAAMpD,EAAiB,CAAC,EAAE,kBAAkBP,EAAoBC,EAAQ,KAAK,GAExG,MACJ,KAAKH,EAA+D,GAAG,eACnE,IAAIT,EAAQY,EAAQ,MAChBqE,EAAUrE,EAAQ,QACtB0D,EAAY,OAAY,MAAM,QAAQ,IAAI,KAAK,gBAAgBpD,EAAkB,YAAY,EAAE,IAAI,MAAOI,IAC/F,CACH,YAAa,MAAMA,EAAQ,eAAeX,EAAoBX,EAAOiF,CAAO,EAC5E,QAAS3D,EAAQ,WAC7C,EACqB,CAAC,GAAG,OAAOd,EAAoD,EAAE,EAClE,MACJ,KAAKC,EAA+D,GAAG,eACnE,IAAIyE,EAAqDC,EACzDb,EAAY,OAAYa,EAAsC,KAAK,UAAUvE,EAAQ,WAAW,KAAO,MAAQuE,IAAwC,SAAmBD,EAAsDC,EAAoC,mBAAqB,MAAQD,IAAwD,OAAzL,OAA2MA,EAAoD,eAAetE,EAAQ,MAAOA,EAAQ,IAAI,EACzc,MACJ,KAAKH,EAA+D,GAAG,YACnE,IAAI2E,EAAsDC,EAC1Df,EAAY,OAAYe,EAAuC,KAAK,UAAUzE,EAAQ,WAAW,KAAO,MAAQyE,IAAyC,SAAmBD,EAAuDC,EAAqC,mBAAqB,MAAQD,IAAyD,OAA5L,OAA8MA,EAAqD,kBAAkBxE,EAAQ,MAAOA,EAAQ,UAAU,EACxd,MACJ,KAAKH,EAA+D,GAAG,aACnE,KAAK,aAAaG,EAAQ,KAAK,EAC/B,KACP,CACDgB,EAAI,YAAY0C,CAAW,CACvC,CAAS,CACJ,CACJ,CAES,OAAOpF,CACjB,GAAa,CAEZ,uBClzBD,MAAMoG,EAAU,IAAI/E,iBAAe,IAAI,EAEvC+E,EAAQ,gBAAgB,MAAO,CAC7B,OAAQ,IAAM,OAAO,sBAA+B,EAAA,KAAA,SAAAC,EAAA,CAAA,OAAAA,EAAA,CAAA,CAAA,EACpD,UAAW,aACX,MAAO,KACT,CAAC,EAEDD,EAAQ,gBAAgB,aAAc,CACpC,OAAQ,IAAM,OAAO,6BAAsC,EAAA,KAAA,SAAAC,EAAA,CAAA,OAAAA,EAAA,CAAA,CAAA,EAC3D,UAAW,oBACX,MAAO,YACT,CAAC,EAEDD,EAAQ,gBAAgB,OAAQ,CAC9B,OAAQ,IAAM,OAAO,uBAAgC,EAAA,KAAA,SAAAC,EAAA,CAAA,OAAAA,EAAA,CAAA,CAAA,EACrD,UAAW,cACX,MAAO,MACT,CAAC,EAEDD,EAAQ,gBAAgB,SAAU,CAChC,OAAQ,IAAM,OAAO,yBAAkC,EAAA,KAAA,SAAAC,EAAA,CAAA,OAAAA,EAAA,CAAA,CAAA,EACvD,UAAW,gBACX,MAAO,QACT,CAAC","x_google_ignoreList":[0]}