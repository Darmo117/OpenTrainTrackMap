"use strict";class WikiGadget{#name;#version;constructor(name,version){if(new.target===WikiGadget){throw new TypeError("Cannot construct WikiGadget instances directly");}
this.#name=name;this.#version=version;}
get name(){return this.#name;}
get version(){return this.#version;}
onReady(){throw new Error("method WikiGadget.onInit() not implemented");}}
(function(){class WikiGadgetManager{#gadgetsQueueSize;#gadgets;#finishedRegistration;#locked;constructor(){this.#gadgetsQueueSize=0;this.#gadgets={};this.#finishedRegistration=false;this.#locked=false;}
registerGadget(gadgetName){if(this.#locked){throw new Error("Cannot register gadgets when manager is locked");}
console.log(`Registering gadget "${gadgetName}â€¦"`);this.#gadgetsQueueSize++;const apiPath=ottm.config.get("wApiPath");$.get(apiPath,{action:"query",query:"gadget",title:encodeURIComponent(gadgetName),},data=>{try{const gadget=eval(data);this.#gadgets[gadget.name]=gadget;}catch(e){console.error(`Error while loading gadget "${gadgetName}":\n${e}`);}
this.#gadgetsQueueSize--;if(this.#gadgetsQueueSize===0&&this.#finishedRegistration){this.#lock();}},);}
finishRegistration(){this.#finishedRegistration=true;if(this.#gadgetsQueueSize===0){this.#lock();}}#lock(){this.#locked=true;}
getGadget(name){return this.#gadgets[name];}
isGadgetRegistered(name){return this.#gadgets[name]!==undefined;}}
class WikiAPI{editPage(title,transform){}
getPage(title){}
getPageCategories(title){}
getCategories(prefix){}
parseWikicode(content){}
followPage(title){}
unfollowPage(title){}}
ottm.wiki={gadgetsManager:new WikiGadgetManager(),api:new WikiAPI(),};$(".hljs").each((_,element)=>hljs.highlightElement(element));})();